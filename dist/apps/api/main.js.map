{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/main.ts","webpack:///./apps/api/src/sw-schema.js","webpack:///external \"apollo-server-express\"","webpack:///external \"express\"","webpack:///external \"graphql\"","webpack:///external \"http\"","webpack:///external \"node-fetch\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as express from 'express';\nimport { ApolloServer, gql } from 'apollo-server-express';\nimport { schema } from './sw-schema';\n\nconst http = require('http');\n\nasync function startApolloServer(schema) {\n  const app = express();\n  const httpServer = http.createServer(app);\n  const server = new ApolloServer({ schema });\n  await server.start();\n\n  server.applyMiddleware({ app });\n  const port = process.env.port || 3333;\n  await new Promise((resolve) => httpServer.listen({ port: port }, resolve));\n  console.log(\n    `ðŸš€ Server ready at http://localhost:${port}${server.graphqlPath}`\n  );\n}\n\nstartApolloServer(schema);\n","import {\n  GraphQLFloat,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLSchema,\n  GraphQLString,\n  printSchema,\n} from 'graphql';\nimport fetch from 'node-fetch';\n\nconst BASE_URL = process.env.base_url || 'http://3.248.199.115/api';\n\nfunction getPersonByUrl(url) {\n  console.log(url);\n  return fetch(url)\n    .then((res) => res.json())\n    .catch((err) => {\n      console.log('Fetch Error :-S', err);\n    });\n}\n\nfunction getPersonBySearch(search) {\n  const ret = getPersonByUrl(`${BASE_URL}/people/?search=${search}`);\n  return ret;\n}\n\nfunction getPeoplePage(page) {\n  console.log(`${BASE_URL}/people/?page=${page}`);\n  const url = 'https://swapi.dev/api/people/?page=1';\n  const url2 = `${BASE_URL}/people/?page=${page}`;\n  //return getPersonByUrl(`${BASE_URL}/people/${page}`);\n  return getPersonByUrl(url2);\n}\n\nconst fetchPeople = () => {\n  return getPersonByUrl(`${BASE_URL}/people`);\n};\n\nconst PeopleType = new GraphQLObjectType({\n  name: 'People',\n  description: 'A people within the Star Wars universe',\n  fields: () => ({\n    count: { type: GraphQLString },\n    next: { type: GraphQLString },\n    previous: { type: GraphQLString },\n    people: {\n      type: new GraphQLList(PersonType),\n      resolve: (people) => people.results,\n    },\n  }),\n});\n\nconst PersonType = new GraphQLObjectType({\n  name: 'Person',\n  description: 'An individual within the Star Wars universe',\n  fields: () => ({\n    name: { type: GraphQLString },\n    gender: { type: GraphQLString },\n    skin_color: { type: GraphQLString },\n    hair_color: { type: GraphQLString },\n    height: { type: GraphQLString },\n    eye_color: { type: GraphQLString },\n    mass: { type: GraphQLString },\n    homeworld: { type: GraphQLString },\n    birth_year: { type: GraphQLString },\n  }),\n});\n\nconst QueryType = new GraphQLObjectType({\n  name: 'Query',\n  fields: () => ({\n    fetchPeople: {\n      type: PeopleType,\n      resolve: fetchPeople,\n    },\n    fetchPage: {\n      type: PeopleType,\n      args: {\n        page: { type: GraphQLString },\n      },\n      resolve: (root, args) => getPeoplePage(args.page),\n    },\n    fetchPerson: {\n      type: PeopleType,\n      args: {\n        name: { type: GraphQLString },\n      },\n      resolve: (root, args) => getPersonBySearch(args.name),\n    },\n  }),\n});\nconst schema = new GraphQLSchema({\n  query: QueryType,\n});\n\nexport { schema };\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"express\");","module.exports = require(\"graphql\");","module.exports = require(\"http\");","module.exports = require(\"node-fetch\");","module.exports = require(\"tslib\");"],"sourceRoot":""}